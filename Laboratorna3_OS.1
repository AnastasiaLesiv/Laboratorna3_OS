using System;
using System.Collections.Generic;
using System.Threading;
using System.Threading.Tasks;

public class Warehouse
{
    public enum ItemStatus
    { AVAILABLE, PRE_ORDER, UNAVAILABLE}

    public ItemStatus FetchBookStatus(string bookTitle)
    {
        Thread.Sleep(2000);
        var values = Enum.GetValues(typeof(ItemStatus));
        var random = new Random();
        int idx = random.Next(0, values.Length);
        return (ItemStatus)values.GetValue(idx);
    }
}

class Bookstore
{
    static async Task Main(string[] args)
    {
        Warehouse warehouse = new Warehouse();
        List<string> titles = new List<string>
        {
            "Harry Potter and the Philosopher's Stone",
            "Harry Potter and the Chamber of Secrets",
            "Harry Potter and the Prisoner of Azkaban",
            "Harry Potter and the Goblet of Fire",
            "Harry Potter and the Half-Blood Prince",
            "Harry Potter and the Deathly Hallows"
        };
        Console.WriteLine("Search Results:");
        var tasks = args.Select(title => FetchBookStatusAsync(title, warehouse));
        await Task.WhenAll(tasks);
        Console.WriteLine($"Time elapsed {DateTime.Now.Millisecond}ms.");
    }

    static async Task FetchBookStatusAsync(string title, Warehouse warehouse)
    {
        var status = await Task.Run(() =>
        {
            return warehouse.FetchBookStatus(title);
        });
        Console.WriteLine($"{title} - {status}");
    }
}
